% Inherit from report
((* extends 'report.tplx' *))


((* block docclass *))
\documentclass{book}
\setcounter{chapter}{-1}
\usepackage{pmboxdraw}
\usepackage{verbatim}
\usepackage[breakable]{tcolorbox}
\usepackage{listings}
\lstset{basicstyle=\ttfamily,
        xleftmargin=4ex,
        showstringspaces=false}    %indent lstlisting code blocks by 4 'x' width spaces
\newcommand{\passthrough}[1]{#1}
((* endblock docclass *))

((* block packages *))
    \usepackage[T1]{fontenc}
    % Nicer default font (+ math font) than Computer Modern for most use cases
    \setlength{\parskip}{0.5em} %for a half space between paragraphs
    \setlength{\parindent}{0em} %for no paragraph indent
    \usepackage{mathpazo}

    % Basic figure setup, for now with no caption control since it's done
    % automatically by Pandoc (which extracts ![](path) syntax from Markdown).
    \usepackage{graphicx}
    % We will generate all images so they have a width \maxwidth. This means
    % that they will get their normal width if they fit onto the page, but
    % are scaled down if they would overflow the margins.
    \makeatletter
    \def\maxwidth{\ifdim\Gin@nat@width>\linewidth\linewidth
    \else\Gin@nat@width\fi}
    \makeatother
    \let\Oldincludegraphics\includegraphics
    % Set max figure width to be 80% of text width, for now hardcoded.
    \renewcommand{\includegraphics}[1]{\Oldincludegraphics[width=.8\maxwidth]{#1}}
    % Ensure that by default, figures have no caption (until we provide a
    % proper Figure object with a Caption API and a way to capture that
    % in the conversion process - todo).
    \usepackage{caption}
    \DeclareCaptionLabelFormat{nolabel}{}
    \captionsetup{labelformat=nolabel}

    \usepackage{adjustbox} % Used to constrain images to a maximum size
    \usepackage{xcolor} % Allow colors to be defined
    \usepackage{enumerate} % Needed for markdown enumerations to work
    \usepackage{geometry} % Used to adjust the document margins
    \geometry{
        verbose,
        papersize={8in,10in},
        tmargin=1in,
        bmargin=0.75in,
        lmargin=1.0in,
        rmargin=1.0in}
    \usepackage{amsmath} % Equations
    \usepackage{amssymb} % Equations
    \usepackage{textcomp} % defines textquotesingle
    % Hack from http://tex.stackexchange.com/a/47451/13684:
    \AtBeginDocument{%
        \def\PYZsq{\textquotesingle}% Upright quotes in Pygmentized code
    }
    \usepackage{upquote} % Upright quotes for verbatim code
    \usepackage{eurosym} % defines \euro
    \usepackage[mathletters]{ucs} % Extended unicode (utf-8) support
    \usepackage[utf8x]{inputenc} % Allow utf-8 characters in the tex document
    \usepackage{fancyvrb} % verbatim replacement that allows latex
    \usepackage{grffile} % extends the file name processing of package graphics
                         % to support a larger range
    % The hyperref package gives us a pdf with properly built
    % internal navigation ('pdf bookmarks' for the table of contents,
    % internal cross-reference links, web links for URLs, etc.)
    \usepackage{hyperref}
    \usepackage{longtable} % longtable support required by pandoc >1.10
    \usepackage{booktabs}  % table support for pandoc > 1.12.2
    \usepackage[inline]{enumitem} % IRkernel/repr support (it uses the enumerate* environment)
    \usepackage[normalem]{ulem} % ulem is needed to support strikethroughs (\sout)
                                % normalem makes italics be italics, not underlines
    \usepackage{titlesec}
    \setcounter{secnumdepth}{1} %only chapter and sections are numbered, subsections and subsubsections are not numbered
    \setcounter{tocdepth}{1}    %only chapter and sections in TOC, subsections and subsubsections are not in TOC
    \usepackage{multicol} % need multicols for end of chapter key terms and end of chapter questions
    \newenvironment{problems}{\begin{multicols}{2}}{\end{multicols}} %an environment for the review question sections, where two columns are shown instead of one column everywhere else. Depends on the logic looking for latex environment problems in notebook cell metadata.

% in cell metadata
%{
%  "latex": {
%    "environment": "problems"
%  }
%}


    \newenvironment{key_terms}{\begin{multicols}{3}}{\end{multicols}} %an environment for the key_terms and concepts sections, where three columns are shown instead of one column everywhere else. Depends on the logic looking for latex environment key terms in notebook cell metadata.

% in cell metadata
%{
%  "latex": {
%    "environment": "key_terms"
%  }
%}

%an environment for long listings of function names
\newenvironment{function_listing}
    {
    \begin{multicols}{3}
    \ttfamily
    }
    {
    \par
    \end{multicols}
    }

% in cell metadata
%{
%  "latex": {
%    "environment": "function_listing"
%  }
%}

\newtcolorbox[auto counter,number within=chapter]{pabox}[2][]{%
colback=red!5!white,colframe=red!75!black,fonttitle=\bfseries,
title=Worked Example ~\thetcbcounter}

\newenvironment{worked_example}
	{
		\begin{pabox}
	}
	{
		\end{pabox}
	}

% in cell metadata
%{
%  "latex": {
%    "environment": "worked_example"
%  }
%}

% to put a \new page before the cell in question. Add the json below to the cell metadata.

% in cell metadata
%{
%  "latex": {
%    "before_cell": "newpage"
%  }
%}


% to put a \newpage after the cell in question. Add the json below to the cell metadata.
% in cell metadata
%{
%  "latex": {
%    "after_cell": "newpage"
%  }
%}


    ((* endblock packages *))

((* block preamble *))
((* endblock preamble *))

((* block margins *))
((* endblock margins *))

((* block title *))
\title{Problem Solving 101 with Python}
\author{Peter D. Kazarinoff, PhD}
\date{3.7 Edition}
((* endblock title *))


%  after the make title add in the copywrite page
%    \maketitle
%    
%    \input{copywrite_page.tex}
%    \newpage
%    
%    \tableofcontents

((* block markdowncell scoped *))


    ((* if 'problems' in cell['metadata'].get('latex', {}).get('environment', []) *))
        \begin{problems}
        ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))
        \end{problems}

    ((* elif 'key_terms' in cell['metadata'].get('latex', {}).get('environment', []) *))
        \begin{key_terms}
        ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))
        \end{key_terms}

        ((* elif 'function_listing' in cell['metadata'].get('latex', {}).get('environment', []) *))
        \begin{function_listing}
        ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))
        \end{function_listing}

        ((* elif 'worked_example' in cell['metadata'].get('latex', {}).get('environment', []) *))
        \begin{worked_example}
        ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))
        \end{worked_example}

    ((* elif 'newpage' in cell['metadata'].get('latex', {}).get('before_cell', []) *))
        \newpage
        ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))

    ((* elif 'newpage' in cell['metadata'].get('latex', {}).get('after_cell', []) *))
        ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))
        \newpage


    ((* else *))
        ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))
    ((* endif *))


((* endblock markdowncell *))

% to get lstlisting use: ((( cell.source | citation2latex | strip_files_prefix | markdown2latex(extra_args=["--top-level-division=chapter", "--listings"]) )))
% in letex doc need \usepackage{listings} \newcommand{\passthrough}[1]{#1}
